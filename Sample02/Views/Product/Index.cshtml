@model Sample02.Models.ViewModels.ProductViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta name="viewport" content="width=device-width" />
    <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/Custom/product.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <title>Index</title>
</head>
<body>
    @{
        Html.RenderPartial("_HeaderLayout");
    }
    <div class="container col-sm-12">
        <div class="row">
            <div class="col-sm-12">
                @using (Html.BeginForm())
                {
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            @Html.LabelFor(model => model.Title)
                            @Html.TextBoxFor(model => model.Title, new { @id = "title", htmlAttributes = new { @class = "form-textbox col-sm-9" } })
                            <br />
                            @Html.LabelFor(model => model.UnitPrice)
                            @Html.TextBoxFor(model => model.UnitPrice, new { @id = "unitPrice", htmlAttributes = new { @class = "form-textbox col-sm-9" } })
                            <br />
                            @Html.LabelFor(model => model.Discount)
                            @Html.TextBoxFor(model => model.Discount, new { @id = "discount", htmlAttributes = new { @class = "form-textbox col-sm-9" } })
                            <br />
                            @Html.LabelFor(model => model.Quantity)
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @id = "quantity", @class = "form-textbox col-sm-9", @min = "0" } })
                            <br />
                            @Html.LabelFor(model => model.CategoryRef, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("CategoryList", null, "--select category--", htmlAttributes: new { @id = "categoryRef" })
                        </div>
                        <br />
                        <div class="col-sm-6">
                            <input type="button" id="btn-add" value="Add"/>
                        </div>
                    </div>
                }
                    <hr />
                    @foreach (var item in Model.ProductList)
                    {
                        <div class="col-sm-3 product-card">
                            <div class="category-div">
                                @Html.DisplayFor(modelItem => item.Ref_Category.CategoryName)
                            </div>
                            <div class="product-title-div">
                                @Html.DisplayFor(modelItem => item.Title)
                            </div>
                            <span id="product-id" hidden>@Html.DisplayFor(modelItem => item.Id)</span>
                            <hr />
                            @if (item.ProductPhoto != null)
                            {
                                var base64 = Convert.ToBase64String(item.ProductPhoto);
                                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                <div class="image-div">
                                    <img class="product-image" src='@imgSrc' />
                                </div>
                            }
                            <span>@Html.DisplayNameFor(modelItem => item.UnitPrice):</span>
                            <span>@Html.DisplayFor(modelItem => item.UnitPrice)</span>
                            <br />
                            @if (item.Discount != 0)
                            {
                                <div>
                                    @Html.DisplayNameFor(modelItem => item.Discount);
                                    <span>@Html.DisplayFor(modelItem => item.Discount)</span>
                                </div>
                            }
                            <span>@Html.DisplayFor(modelItem => item.Quantity)</span>
                            <br />
                            <button id="btn-select">Select</button>
                        </div>
                    }

                </div>
        </div>
    </div>
    <script type="text/javascript">

        $(document).ready(function () {
            function sendAjaxRequest(url, type, data) {
                return $.ajax({
                    url: url,
                    type: type,
                    data: JSON.stringify(data),
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                }).fail(function (error) {
                    console.log(error);
                });
            };

            var ref_ProductViewModel = new Object();
            var inputs = new Object();
            var selectedCategory;
            function createProduct() {
                ref_ProductViewModel.categoryRef = selectedCategory;
                ref_ProductViewModel.title = $("#title").val();
                ref_ProductViewModel.unitPrice = $("#unitPrice").val();
                ref_ProductViewModel.discount = $("#discount").val();
                ref_ProductViewModel.quantity = $("#quantity").val();
                console.log(ref_ProductViewModel);
                sendAjaxRequest('/Product/Create/', 'POST', ref_ProductViewModel);
            }

            $("#categoryRef").change(function () {
                selectedCategory = $(this).children("option:selected").val();
                console.log(this.children.option.innerHTML);
            })

            $("#btn-add").click(createProduct);

            $("#btn-select").click(function () {
                var $this = this;
                var divContent = $this.closest("div").children;
                console.log(divContent);
                inputs = {
                    category: divContent[0].innerText,
                    title: divContent[1].innerText,
                    productId: divContent[2].innerText,
                    unitPrice: divContent[6].innerText,
                    discount: divContent[8] ? divContent[8].children[0].innerText : null,
                    quantity: divContent[9].innerText                   
                }
                console.log(inputs);
                $("#title").val(inputs.title);
                $("#unitPrice").val(inputs.unitPrice);
                $("#discount").val(inputs.discount);
                $("#quantity").val(inputs.quantity);
            })

        })

    </script>
</body>
</html>
