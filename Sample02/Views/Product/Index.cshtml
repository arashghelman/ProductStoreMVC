@model Sample02.Models.ViewModels.ProductViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta name="viewport" content="width=device-width" />
    <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/Custom/product.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <script src="~/Scripts/Custom/product.js"></script>
    <title>Index</title>
</head>
<body>
    @{
        Html.RenderPartial("_HeaderLayout");
    }
    <div class="container col-sm-12">
        <div class="row">
            <div class="col-sm-12">
                @using (Html.BeginForm())
                {
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            @Html.LabelFor(model => model.Title)
                            @Html.TextBoxFor(model => model.Title, new { @id = "title", htmlAttributes = new { @class = "form-textbox col-sm-9" } })
                            <br />
                            @Html.LabelFor(model => model.UnitPrice)
                            @Html.TextBoxFor(model => model.UnitPrice, new { @id = "unitPrice", htmlAttributes = new { @class = "form-textbox col-sm-9" } })
                            <br />
                            @Html.LabelFor(model => model.Discount)
                            @Html.TextBoxFor(model => model.Discount, new { @id = "discount", htmlAttributes = new { @class = "form-textbox col-sm-9" } })
                            <br />
                            @Html.LabelFor(model => model.Quantity)
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @id = "quantity", @class = "form-textbox col-sm-9", @min = "0" } })
                            <br />
                            @Html.LabelFor(model => model.CategoryRef, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("CategoryList", null, "--select category--", htmlAttributes: new { @id = "categoryRef" })
                        </div>
                        <br />
                        <div class="col-sm-6">
                            <input type="button" id="btn-add" value="Add"/>
                            <input type="button" id="btn-remove" value="Remove" />
                        </div>
                    </div>
                }
                    <hr />
                    @foreach (var item in Model.ProductList)
                    {
                        <div class="col-sm-3 product-card">
                            <div class="category-div">
                                @Html.DisplayFor(modelItem => item.Ref_Category.CategoryName)
                            </div>
                            <div class="product-title-div">
                                @Html.DisplayFor(modelItem => item.Title)
                            </div>
                            <span id="product-id" hidden>@Html.DisplayFor(modelItem => item.Id)</span>
                            <hr />
                            @if (item.ProductPhoto != null)
                            {
                                var base64 = Convert.ToBase64String(item.ProductPhoto);
                                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                <div class="image-div">
                                    <img class="product-image" src='@imgSrc' />
                                </div>
                            }
                            <span>@Html.DisplayNameFor(modelItem => item.UnitPrice):</span>
                            <span>@Html.DisplayFor(modelItem => item.UnitPrice)</span>
                            <br />
                            @if (item.Discount != 0)
                            {
                                <div>
                                    @Html.DisplayNameFor(modelItem => item.Discount);
                                    <span>@Html.DisplayFor(modelItem => item.Discount)</span>
                                </div>
                            }
                            <span>@Html.DisplayFor(modelItem => item.Quantity)</span>
                            <br />
                            <button id="btn-select">Select</button>
                        </div>
                    }

                </div>
        </div>
    </div>
</body>
</html>
